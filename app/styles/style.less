@color: #bde;
@font-size: 20px;
@circle-width: 40px;
@circle-height: 40px;

h1 {
    color: @color;
}

p {
    color: @color - 100;
    font-size: @font-size;
}

#circle() {
    background-color: #cbd;
    border-radius: 100%;
}

#small-circle {
    width: @circle-width;
    height: @circle-height;
    #circle;
}

#big-circle {
    width: @circle-width + 30;
    height: @circle-height + 30;
    #circle;
}

#circle0 (@size: 25px) {
    background-color: #4caf50;
    border-radius: 100%;

    width: @size;
    height: @size;
}

#small-circle0 {
    #circle0;
}

#big-circle0 {
    #circle0(100px);
}

ul {
    @color: fff;
    background-color: #03a9f4;
    padding: 4px;
    list-style: none;

    li {
        color: @color;
        border-radius: 3px;
        border: 2px solid #588;
        margin: 10px 0;
    }
}

@div-width: 100px;
@color: #03a9f4;

div {
    height: 50px;
    display: inline-block;
}

#left {
    width: @div-width;
    background-color: @color - 10;
}

#right {
    width: @div-width * 2;
    background-color: @color;
}

@var: #004590;

#third {
    height: 50px;
    width: 50px;
    background-color: @var;

    &:hover {
        background-color: fadeout(@var, 50%);
    }
}

//********************************************

.global-header {
    height: auto;
    display: block;
    background-color: #f5f5f5;
    color: #443d3d;
    border-bottom: 1px solid #ddd;

    h1 {
        margin-top: 0;
        margin-bottom: 0;
        font-size: 4rem;

        small {
            font-size: 2rem;
        }
    }

    .header-actions {
        background-color: #fff;
        padding-top: 10px;
        padding-bottom: 10px;
        text-align: center;
    }
}

.class-1 {
    background-color: #06b;

    &.class-2 {
        color: #547;
    }
}

.main {
    .item-card {
        width: 60px;
        height: 60px;
        background-color: #f5f5f5;
        border: 1px solid #a31515;
    }

    .ie7 &{
        width: 10px;
        height: 10px;
        background-color: #b01;
        border: 3px solid #536;
        border-radius: 50%;
    }
}

.button {
    background-color: #ddd;
    color: #000;

    &-add, &-remove {
        color: #fff;
    }
    &-add {
        background-color: green;
    }

    &-remove {
        background-color: red;
    }
}
/*Extend*/
.global-header {
    background-color: #fff;
    color: #000;
}

.global-navigation {
    &:extend(.global-header);
    border: 1px solid #ddd;
}

/*Extend all*/

.global-header {
    background-color: #fff;
  
    .area {
      text-align: center;
    }
  }
  
  .global-header:hover {
    background-color: #000;
  }

  .global-footer {
      &:extend(.global-header all);
  }
  /*Extend with context*/
.item {
    background-color: #fff;
    border: 1px solid #ddd;
  
    .header {
        padding: 25px;
    }
}

.article {
    &:extend(.item .header);
}

/*media in less*/
.class {
    .item {
        @media(min-width: 992px) {
            display: none;
        }
    }
}

/*nested media expression*/
.one {
    @media(min-width: 768px) {
        background-color: #f5f5f5;

        .two {
            @media(max-width: 992px) {
                color: #000000;
            }
        }
    }
}

/*Groups selectors don't work inside media queries*/

@media screen {
    .one {
      &:extend(.three, .two);
      background-color: #fff;
    }
  
    @media (min-width: 992px) {
        .two {
        &:extend(.one);
        color: #777;
        }
    }
}
  
.three {
    border-right: 1px solid #000;
}

/*Groups selectors work outside media queries*/
@media screen {
    .one {
      background-color: #fff;
    }
  
    @media (min-width: 992px) {
        .two {
            color: #777;
        }
    }
}
  
.test {
    &:extend(.one, .two);
    border-right: 1px solid #000;
}

/* Import of styles in less*/
@import '_mail.css';          //Compiles according to common css rules. 
@import (multiple) '_duckduckgo_multiple';
@import (css) '_mail.css';    //In final css file will be presented on the top of the file.
@import (less) '_mail.css';
@import '_duckduckgo';

.canonium {
    color: #53599a;
}

@import (reference) '_google';
@import (multiple) '_duckduckgo_multiple';

.topbar {
    &:extend(.google-topbar);
}

@import '_yandex';
@import '_yahoo';
@import (less, inline) '_mail_with_filter.css';
@import (optional) '_not_existed'; //Without the option 'optional' an attempt to compile will couse an error of compilation

/*Variables*/
@block-background: #f5f5f5;
@block-color: #333;
@block-border-color: #ddd;

.block {
    background-color: @block-background;
    color: @block-color;
    border: 1px solid @block-border-color;
}

/*Variables - screening. The example doesn't work*/
.element {
    // filter: e("ms:alwaysHasItsOwnSyntax.For.Stuff()");
    // filter: ~"ms:alwaysHasItsOwnSyntax.For.Stuff()";
    // filter: ~'ms:alwaysHasItsOwnSyntax.For.Stuff()';
  }

  /*Interpolation of variables*/
  @lang-prefix: site;
  @lang-russian: rus;
  @lang-english: eng;

  .@{lang-prefix}-@{lang-russian} {
      content: "@{lang-russian}";
  }

  .@{lang-prefix}-@{lang-english} {
      content: "@{lang-english}";
  }

  @prop: color;

  .widget {
      @{prop}: #678;
      background-@{prop}: #890;
  }

  @cp: c;
  @c-gray: gray;
  @c-red: red;

  .gray {
      background-@{prop}: e("@{@{cp}-gray}");
      @{prop}: e("@{@{cp}-red}");
  }

  @margin-small: 45px;
  @padding-small: 20px;

  @margin-large: 90px;
  @padding-large: 40px;

  @size: small;

  .block {
      margin: ~"@{margin-@{size}}";
      /*padding: ~"@{margin-@{size}}" + ~"@{padding-@{size}}"; // Так не сработает, потому что после преобразования будут получены строки. Less, версия которого младше по крайней мере версии 2.7.1 не производит математические операции над строками*/
      /*Решение может быть таким:*/
      @margin: "margin-@{size}";
      @padding: "padding-@{size}";
      margin: @@margin + @@padding;
  }

/*Naming of variables*/
/*Example*/
/* Дефис*/
@grid-breakpoint-xsmall: 540px;
@navbar-item-color: #777;
@pagination-border-color: #ddd;

// Нижнее подчёркивание (under_score)
@hamburger_border_radius: @border_radius;
@line_height_computed: 24px;
@font_awesome_path: "../vendor/font-awesome/font";

// Верблюжья нотация (camelCase)
@labelFontSize: 0.8em;
@commentBackground: #FFFFFF;
@authorHoverColor: @primaryColorHover;

/* Mix-ins*/
.bordered {
    border-top: dotted 1px #333;
    border-bottom: solid 2px #333;
}

.article {
    .bordered; // все свойства .bordered станут доступны в .article
    color: #443d3d;
}

  //чистая примесь
  .bordered() { //круглые скобки говорят компилятору, что создавать .bordered не нужно
    border-top: dotted 1px #333;
    border-bottom: solid 2px #333;
  }
  
  .article {
    .bordered;
    color: #443d3d;
  }

  //примеси с параметрами. Параметров может быть больше одного, разделители - , или ;. Пример: (@a, @b), либо (@a; @b)
  .bordered(@_color) { //принимает значение для параметра @_color
    border-top: dotted 1px @_color;
    border-bottom: solid 2px @_color;
  }
  
  .article {
    .bordered(#ccc); //передаем значение параметра
    color: #443d3d;
  }

  //значение по умолчанию
  .bordered(@_color: #ccc) { //при отсуствии параметра ошибки не будет
    border-top: dotted 1px @_color;
    border-bottom: solid 2px @_color;
  }
  
  .article {
    .bordered();
    color: #443d3d;
  }

  //изменение части параметров
  .transition(@function: ease, @duration: .3s, @property: all) {
    transition-timing-function: @function;
    transition-duration: @duration;
    transition-property: @property;
  }
  
  .link {
    .transition(@duration: 1s); // для передачи значений параметров идущих попорядку слева на-право можно просто указать значения: .transition(linear, .5s);
  }